<?xml version="1.0" ?>
<launch>

<node name="rviz" pkg="rviz" type="rviz" args="-d $(find industrial_extrinsic_cal)/config/industrial_extrinsic_calibration.rviz" required="true" />

  <!-- Kinect camera node   -->
  <include  file="$(find freenect_launch)/launch/freenect.launch">
    <arg name="camera" default="kinect" />
    <arg name="publish_tf" default="false" />
  </include>

  <!-- Define location of camera relative to world_frame  -->
  <node pkg="tf" type="static_transform_publisher" 
                 name="kinect_rgb_frame" 
                 args="0 0 0 0 0 0 world kinect_rgb_optical_frame 100" />

  <node pkg="tf" type="static_transform_publisher" 
                 name="kinect_frame" 
                 args="0 0 0 0 0 0 world kinect_depth_optical_frame 100" />


<!-- Launch service which is called to to indicate scene is ready   -->
  <node pkg="industrial_extrinsic_cal" type="trigger_service" name="rosSceneTrigger" output="screen" />

<!-- Launch service which is called to to indicate scene is ready   -->
  <node pkg="industrial_extrinsic_cal" type="ros_robot_trigger_action_service" name="rosRobotSceneTrigger" output="screen" />


<!-- Launch the extrinsic calibration service -->
  <node pkg="industrial_extrinsic_cal" type="service_node" name="calibration_service_node" output="screen" >
    <rosparam>
      camera_file: "kinect_camera_def.yaml"
      target_file: "checkerboard7x9_target.yaml"
      cal_job_file: "ur10_kinect_caljob.yaml"
    </rosparam>
  </node>

  <!-- Launch the motoman model for Rviz -->

  <!-- Define location of robot relative to world_frame 
  <node pkg="tf" type="static_transform_publisher" 
                 name="world_frame" 
                 args="0 0 0 0 0 0 world_frame base_link 100" />
-->
  <!-- Define location of target fixture relative to tool0 of robot 
  <node pkg="tf" type="static_transform_publisher" 
                 name="target_tf" 
                 args="0.0 0.0 0.0 0.0 3.14 0.0 tool0 target_tf 100" /> 	
-->

  <!-- Define location of printed target relative to the fixture 
  <node pkg="tf" type="static_transform_publisher" 
                 name="target_frame" 
                 args="0.070 0.120 0.0 0.707 0.0 0.0 target_tf target_frame 100" /> 
  
  <arg name="controller" value = "fs100" />
  <arg name="robot_ip" default = "192.168.32.6"/>
  <rosparam command="load" file="$(find motoman_sia20d_support)/config/joint_names_sia20d.yaml" />

  <include file="$(find motoman_driver)/launch/robot_state_$(arg controller).launch">
		  <arg name="robot_ip"   value="$(arg robot_ip)" />
  </include>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <include file="$(find motoman_sia20d_support)/launch/load_sia20d.launch" />
  -->

</launch>

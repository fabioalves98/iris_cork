#!/usr/bin/env python
PACKAGE = "cork_iris"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

type_enum = gen.enum([  gen.const("Original",            int_t, 0, "The original pointcloud"),
                        gen.const("Cork_Pieces",         int_t, 1, "The original pointcloud without the box"),
                        gen.const("Surface_Normals",     int_t, 2, "Surface normals color"),
                        gen.const("Clustering",          int_t, 3, "Clustered point cloud")],
                        "An enum to set size")

gen.add("type", int_t, 0, "Type of the pointcloud", 0, 0, 3, edit_method=type_enum)

gen.add("live",             bool_t,     0, "Live view?",        False)
gen.add("smooth_cloud",     bool_t,     0, "Cloud Smoothing?",  False)


# Clustering Algorithm and Search Params
gen.add("leaf_size",        double_t,   0, "Voxel down sample leaf size",     0.005, 0, 1)
gen.add("cluster_tolerance",double_t,   0, "Clustering algorithm tolerance",     0.01, 0, 1)

# Clustering Parameters
gen.add("min_cluster_size", int_t,      0, "Min cluster size (Points / X)",     70, 0, 1000)
gen.add("max_cluster_size", int_t,      0, "Max cluster size (Points / X)",  5, 0, 100)
gen.add("normal_diff",      double_t,   0, "Minimum normal difference",     0.995, 0, 1)
gen.add("squared_dist",     double_t,   0, "Minimum squared distance",      0.1, 0, 1)
gen.add("curvature",        double_t,   0, "Minumum curvature difference",  0.1, 0, 1)


exit(gen.generate(PACKAGE, "cork_iris", "PCLPoints"))
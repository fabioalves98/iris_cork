#!/usr/bin/env python
PACKAGE = "cork_iris"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

type_enum = gen.enum([  gen.const("Original",            int_t, 0, "The original pointcloud"),
                        gen.const("Cork_Pieces",         int_t, 1, "The original pointcloud without the box"),
                        gen.const("Surface_Normals",     int_t, 2, "Surface normals color"),
                        gen.const("Surface_Curvature",   int_t, 3, "Curvature color"),
                        gen.const("Clustering",          int_t, 4, "Clustered point cloud")],
                        "An enum to set size")

gen.add("type", int_t, 0, "Type of the pointcloud", 0, 0, 4, edit_method=type_enum)

gen.add("live",             bool_t,     0, "Live view of the PointCloud",       False)
gen.add("remove_outliers", bool_t,     0, "Remove statistical outliers",       True)
gen.add("smooth_cloud",     bool_t,     0, "Smooth PointCloud",                 False)
gen.add("choose_best_cork",     bool_t,     0, "Choose best cork with the current applied algorithm.",                 True)


# Best cork algorithm params
gen.add("z_threshold" ,double_t,   0, "Any cork pieces with a Z bigger than the <highest_z_cork + z_threshold> are removed",  0.05, 0.005, 1)
gen.add("center_threshold"     ,double_t,   0, "Any cork pieces further away from the center than <center_threshold> are removed", 0.1, 0.005, 1)


# Clustering Algorithm and Search Params
gen.add("leaf_size"         ,double_t,   0, "Voxel down sample leaf size",      0.005, 0.005, 1)
gen.add("cluster_tolerance" ,double_t,   0, "Clustering algorithm tolerance",   0.01, 0.005, 1)
gen.add("radius_search"     ,double_t,   0, "Search readius for KDTree",        0.01, 0.005, 1)

# Clustering Parameters
gen.add("min_cluster_size", int_t,      0, "Min cluster size (Points / X)",     25, 1, 1000)
gen.add("max_cluster_size", int_t,      0, "Max cluster size (Points / X)",     6, 1, 100)
gen.add("normal_diff",      double_t,   0, "Minimum normal difference",         0.96, 0.001, 1)
gen.add("squared_dist",     double_t,   0, "Minimum squared distance",          0.00005, 0.00000001, 1)
gen.add("curvature",        double_t,   0, "Minumum curvature difference",      0.07, 0.00001, 1)

# Statistical Outliers Parameters
gen.add("mean_k",     int_t,   0, "Mean k on the Statistical Outliers Algorithm", 25, 1, 500)


exit(gen.generate(PACKAGE, "cork_iris", "PCLCork"))